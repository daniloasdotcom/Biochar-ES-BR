import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt


# Fun√ß√£o para carregar o arquivo Excel
def load_data():
    file_path = "data/cinzas.xlsx"
    try:
        return pd.read_excel(file_path)
    except FileNotFoundError:
        st.error("O arquivo 'cinzas.xlsx' n√£o foi encontrado no diret√≥rio do projeto.")
        return None


# Fun√ß√£o para exibir texto explicativo
def show_explanatory_text01():
    explicativo_texto = """
    <div style="text-align: justify;">
    A temperatura de carboniza√ß√£o e o tipo de material de origem (feedstock) s√£o fatores cruciais na determina√ß√£o das propriedades dos biochars, definindo, por exemplo, o conte√∫do de nutrientes, sua disponibilidade, a quantidade de cargas e grupos funcionais presentes no biocarv√£o, sua recalcitr√¢ncia e tamb√©m a alcalinidade do biocarv√µes.

    No que se refere a¬†alcalinidade dos biochars, √© essencial para seu uso como condicionador de solo, pois influencia diretamente a capacidade de neutralizar a acidez de solo √°cidos, promovendo um ambiente mais prop√≠cio para o crescimento das culturas agr√≠colas. Al√©m disso, a alcalinidade est√° relacionada √† capacidade de troca cati√¥nica, que √© crucial para a reten√ß√£o e disponibiliza√ß√£o de nutrientes para as plantas. Desta forma o uso de biochars deve levar em conta sua capacidade de mudar o pH do solo para que seu uso adequado sem sistemas agr√≠colas.

    Fidel et al., (2017)  divide as fontes de alcalinidade dos biocarv√µes em quatro categorias principais: grupos funcionais org√¢nicos de baixa acidez, compostos org√¢nicos sol√∫veis, carbonatos e outros alcalis inorg√¢nicos.  (Fidel et al., 2017). No que se refere ao carbonatos e outro alcalis inorg√¢nicos, estes est√£o presentes no conte√∫do cinzas do biocarv√µes.

    Sendo assim era de se esperar que quanto maior o conte√∫do de cinzas mais seria a alcalinidade dos biocarv√£o. Contudo nem sempre √© isso que observamos

    </div>
    """
    st.markdown(explicativo_texto, unsafe_allow_html=True)


def show_explanatory_text02():
    explicativo_texto = """
    <div style="text-align: justify;">
    Ao olharmos para o gr√°fico acima, percebemos que mesmo materiais altamente lignificados (pontos verdes), que possuem menor teor de cinzas (pontos mais concentrados no lado esquerdo do gr√°fico), apresentam varia√ß√µes significativas de pH (entre 4 e 10), indicando que o conte√∫do de cinzas n√£o possui necessariamente um boa correla√ß√£o com a alcalinidade dos biochar.
    <br>
    </div>
    """
    st.markdown(explicativo_texto, unsafe_allow_html=True)


def show_explanatory_text03():
    explicativo_texto = """
    <div style="text-align: justify;">
    Isto se deve ao fato que a alcalinidade est√° ligada, sobretudo, √†s esp√©cies qu√≠micas formadas ap√≥s a carboniza√ß√£o.
    <br>
    </div>
    """
    st.markdown(explicativo_texto, unsafe_allow_html=True)


# Fun√ß√£o para exibir o gr√°fico com a cita√ß√£o verticalizada
def plot_graph(df, x_col, y_col, title, x_label, y_label, selected_option, color_map):
    plt.style.use("seaborn-v0_8-poster")
    fig, ax = plt.subplots(figsize=(8, 6))

    # Plotando os dados com base na sele√ß√£o
    if selected_option == "Conjunto completo":
        for classification, group_data in df.groupby("Classifica√ß√£o"):
            ax.scatter(
                group_data[x_col],
                group_data[y_col],
                label=classification,
                color=color_map.get(classification, "gray"),
                alpha=0.8,
                s=100
            )
    else:
        group_data = df[df["Classifica√ß√£o"] == selected_option]
        ax.scatter(
            group_data[x_col],
            group_data[y_col],
            label=selected_option,
            color=color_map.get(selected_option, "gray"),
            alpha=0.8,
            s=100
        )

    # Configura√ß√µes do eixo e estilo
    ax.set_title(title, fontsize=18, fontweight="bold")
    ax.set_xlabel(x_label, fontsize=14)
    ax.set_ylabel(y_label, fontsize=14)
    ax.tick_params(axis='both', which='major', labelsize=12)
    ax.legend(title="Classifica√ß√£o", fontsize=12, title_fontsize=14, loc='lower right')
    ax.grid(True, linestyle="--", alpha=0.6)
    ax.spines["top"].set_visible(False)
    ax.spines["right"].set_visible(False)

    # Adicionando a cita√ß√£o no gr√°fico na posi√ß√£o desejada com orienta√ß√£o vertical
    ax.text(
        1.05, 0.5,  # Posi√ß√£o relativa no gr√°fico (x: fora da √°rea de plotagem, y: meio vertical)
        "Fonte de dados: UCD BIOCHAR DATABASE, 2024",
        transform=ax.transAxes,  # Coordenadas relativas ao eixo
        fontsize=10,  # Tamanho da fonte
        color="gray",  # Cor do texto
        ha="left",  # Alinhamento horizontal √† esquerda
        va="center",  # Alinhamento vertical no centro
        rotation=90  # Rota√ß√£o do texto (90 graus para verticalizar)
    )

    return fig


# Fun√ß√£o principal para exibir os gr√°ficos e a an√°lise
def main():
    st.title("pH e o conte√∫do inorg√¢nico de biocarv√µes")

    # Exibir texto explicativo01
    show_explanatory_text01()

    # Carregar os dados
    df_cinzas = load_data()

    if df_cinzas is not None:
        options = ["Conjunto completo", "Pouco lignificado", "Moderadamente lignificado", "Altamente lignificado"]
        color_map = {
            "Pouco lignificado": "#1f77b4",
            "Moderadamente lignificado": "#ff7f0e",
            "Altamente lignificado": "#2ca02c"
        }

        # Gr√°fico: Cinzas vs pH
        layout = st.columns([4, 7])
        with layout[0]:
            selected_option = st.radio("Selecione a classifica√ß√£o:", options, index=0, key="cinzas_ph")
        with layout[1]:
            fig = plot_graph(df_cinzas, "Cinzas", "pH", "Cinzas vs pH", "Cinzas (%)", "pH", selected_option, color_map)
            st.pyplot(fig)

        # Adicionar expander explicativo com fundo cinza no conte√∫do
        with st.expander(
                "üí° Por que adicionamos no gr√°fico acima as categorias 'pouco', 'moderadamente' e 'altamente' lignificados?"):
            st.markdown("""
            <div style="background-color: #f0f0f0; padding: 10px; border-radius: 5px;">
            A ideia de nossa classifica√ß√£o √© que quanto maior o conte√∫do org√¢nico resistente ao processo de oxida√ß√£o, menor √© a sua capacidade de gerar cinzas. Neste sentido, lhe convido a observar o gr√°fico, tamb√©m nestas categorias separadamente.
            </div>
            """, unsafe_allow_html=True)

            st.markdown("<br>", unsafe_allow_html=True)

    # Exibir texto explicativo02
    show_explanatory_text02()

    st.markdown("<br>", unsafe_allow_html=True)

    # Exibir texto explicativo03
    show_explanatory_text03()

    st.markdown("<br>", unsafe_allow_html=True)

    # Refer√™ncia
    st.markdown("""
    <div style="text-align: left;">
    <strong>Refer√™ncias</strong>: <br>
    Fidel, R.B., Laird, D.A., Thompson, M.L., & Lawrinenko, M. (2017). Characterization and quantification of biochar alkalinity. 
    <em>Chemosphere, 167</em>, 367-373. Dispon√≠vel em: <a href="https://doi.org/10.1016/j.chemosphere.2016.09.151" target="_blank">https://doi.org/10.1016/j.chemosphere.2016.09.151</a>.
    <br>
    UCD BIOCHAR DATABASE. Biochar Database. University of California, Davis, 2024. Dispon√≠vel em: <a href="https://biochar.ucdavis.edu" target="_blank">https://biochar.ucdavis.edu</a>. Acesso em: 4 dez. 2024.
    </div>
    """, unsafe_allow_html=True)


if __name__ == "__main__":
    main()
